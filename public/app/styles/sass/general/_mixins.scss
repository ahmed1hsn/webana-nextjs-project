@mixin font-size($size) {
    @include rem(font-size, $size);
}

@mixin transform($properties) {
    -webkit-transform: $properties;
    -moz-transform: $properties;
    -ms-transform: $properties;
    transform: $properties;
}

@mixin border-top-right-radius($radius) {
    border-top-right-radius: 6px;
}

@mixin border-top-left-radius($radius) {
    border-top-left-radius: 6px;
}

//tour guide

@mixin center($xy: xy) {
    @if $xy == xy {
        left: 50%;
        top: 50%;
        bottom: auto;
        right: auto;
        @include transform(translateX(-50%) translateY(-50%));
    } @else if $xy == x {
        left: 50%;
        right: auto;
        @include transform(translateX(-50%));
    } @else if $xy == y {
        top: 50%;
        bottom: auto;
        @include transform(translateY(-50%));
    }
}

// antialiasing mode font rendering

@mixin font-smoothing {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

$S: 480px;
$M: 600px;
$L: 1100px;

// media queries

@mixin MQ($canvas) {
    @if $canvas == S {
        @media only screen and (min-width: $S) {
            @content;
        }
    } @else if $canvas == M {
        @media only screen and (min-width: $M) {
            @content;
        }
    } @else if $canvas == L {
        @media only screen and (min-width: $L) {
            @content;
        }
    }
}

// super light grid - it works with the .cd-container class inside style.scss

@mixin column($percentage, $float-direction: left) {
    width: 100% * $percentage;
    float: $float-direction;
}

//  MEDIA QUERIES

// A map of breakpoints.
$breakpoints: (
    vxs: 375px,
    xxs: 414px,
    xs: 576px,
    sm: 700px,
    md: 1025px,
    lg: 1200px
);

//
//  RESPOND ABOVE

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {
    // If the breakpoint exists in the map.
    @if map-has-key($breakpoints, $breakpoint) {
        // Get the breakpoint value.
        $breakpoint-value: map-get($breakpoints, $breakpoint);

        // Write the media query.
        @media (min-width: $breakpoint-value) {
            @content;
        }
        // If the breakpoint doesn't exist in the map.
    } @else {
        // Log a warning.
        @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}

//
//  RESPOND BELOW

// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {
    // If the breakpoint exists in the map.
    @if map-has-key($breakpoints, $breakpoint) {
        // Get the breakpoint value.
        $breakpoint-value: map-get($breakpoints, $breakpoint);

        // Write the media query.
        @media (max-width: ($breakpoint-value - 1)) {
            @content;
        }
        // If the breakpoint doesn't exist in the map.
    } @else {
        // Log a warning.
        @warn 'Invalid breakpoint: #{$breakpoint}.';
    }
}

//
//  RESPOND BETWEEN

// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {
    // If both the lower and upper breakpoints exist in the map.
    @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {
        // Get the lower and upper breakpoints.
        $lower-breakpoint: map-get($breakpoints, $lower);
        $upper-breakpoint: map-get($breakpoints, $upper);

        // Write the media query.
        @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
            @content;
        }
        // If one or both of the breakpoints don't exist.
    } @else {
        // If lower breakpoint is invalid.
        @if (map-has-key($breakpoints, $lower) == false) {
            // Log a warning.
            @warn 'Your lower breakpoint was invalid: #{$lower}.';
        }
        // If upper breakpoint is invalid.
        @if (map-has-key($breakpoints, $upper) == false) {
            // Log a warning.
            @warn 'Your upper breakpoint was invalid: #{$upper}.';
        }
    }
}
